stages:
  - build
  - test
  - publish
  - deploy

variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

build-job-WebApp:
  stage: build
  image: node:14
  script:
    - cd WebApp/mathgames_app
    - yarn install
    - yarn build

test-job-API:
  stage: test
  image: node:14
  script:
    - cd MathGamesAPI
    - npm i npm@latest -g
    - npm i
    - npm test

publish:
  image: docker:18.09
  stage: publish
  services:
    - docker:18.09-dind
  script:
    - cd WebApp/mathgames_app
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST

deploy:
  image: alpine:latest
  stage: deploy
  tags:
    - deployment
  script:
    - apk update && apk add openssh-client
    - chmod og=r $ID_RSA
    - ssh -i $ID_RSA $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA $SERVER_USER@$SERVER_IP "docker pull $TAG_COMMIT"
    - ssh -i $ID_RSA $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
    - ssh -i $ID_RSA $SERVER_USER@$SERVER_IP "docker run -d -p 80:80 --name my-app $TAG_COMMIT"
  environment:
    name: production
    url: http://$SERVER_IP
  only:
    - new/deploy_in_digital_ocean